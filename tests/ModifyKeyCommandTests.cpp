#include <catch2/catch_test_macros.hpp>
#include "../src/KeyItem.h"
#include "../src/ModifyKeyCommand.h"
#include "../src/AlgorithmID.h"

TEST_CASE("ModifyKeyCommand", "[ModifyKeyCommand]") {
    SECTION("Generation") {
        kmm::KeyItem key;
        key.m_erase = false;
        key.m_kek = false;
        key.m_sln = 0x12;
        key.m_kid = 0x34;
        key.m_keyLen = 32;
        uint8_t keyData[] = {0x37, 0x24, 0x23, 0xEC, 0x69, 0x61, 0x57, 0x9C, 0x46, 0x04, 0x8A, 0x2F, 0xAD, 0x15, 0x42, 0x31,
                             0x2A, 0xF5, 0xE1, 0x71, 0x0A, 0x03, 0xD6, 0xAC, 0xED, 0x5A, 0xA1, 0x33, 0xC8, 0xA9, 0x52, 0x7B};
        key.m_key = keyData;

        kmm::ModifyKeyCommand cmd;
        cmd.m_algid = AES256;
        cmd.m_keyItem = &key;
        cmd.m_ksetId = 0x01;

        uint8_t referenceBytes[] = {0x00, 0x00, 0x80, 0x00, 0x00, 0x01, 0x84, 0x20, 0x01,
                                    0x00, 0x00, 0x12, 0x00, 0x34,
                                    0x37, 0x24, 0x23, 0xEC, 0x69, 0x61, 0x57, 0x9C, 0x46, 0x04, 0x8A, 0x2F, 0xAD, 0x15, 0x42, 0x31,
                                    0x2A, 0xF5, 0xE1, 0x71, 0x0A, 0x03, 0xD6, 0xAC, 0xED, 0x5A, 0xA1, 0x33, 0xC8, 0xA9, 0x52, 0x7B};
        uint8_t referenceLen = 46;
        uint8_t testBytes[128];
        uint8_t testLen = cmd.toBytes(testBytes);

        REQUIRE(referenceLen == testLen);

        for (int i=0; i<referenceLen; i++) {
            REQUIRE(referenceBytes[i] == testBytes[i]);
        }
    }
}